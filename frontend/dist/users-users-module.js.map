{"version":3,"sources":["webpack:///./src/app/layout/users/User.ts","webpack:///./src/app/layout/users/users-routing.module.ts","webpack:///./src/app/layout/users/users.component.html","webpack:///./src/app/layout/users/users.component.scss","webpack:///./src/app/layout/users/users.component.ts","webpack:///./src/app/layout/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["export class User {\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    staffTitle: string;\r\n    mobileNumber: number;\r\n    email: string;\r\n    password: string;\r\n    userPermission: string;\r\n    notes: string;\r\n    employmentStartDate: string;\r\n    employmentEndDate: string;\r\n    apointmentBooking: boolean;\r\n    apointmentColor: string\r\n    services: [];\r\n    commissions: Commission;\r\n\r\n    constructor() {\r\n      this.new();\r\n      return this;\r\n    }\r\n\r\n    new() {\r\n      this.firstName = \"\";\r\n      this.lastName = \"\";\r\n      this.staffTitle = \"\";\r\n      this.mobileNumber = null;\r\n      this.email = \"\";\r\n      this.userPermission = \"\";\r\n      this.notes = \"\";\r\n      this.employmentStartDate = \"\";\r\n      this.employmentEndDate = \"\";\r\n      this.apointmentBooking = false;\r\n      this.apointmentColor = \"\";\r\n      this.services = [];\r\n      if (this.commissions === undefined) {\r\n        this.commissions = new Commission();\r\n      } else {\r\n        this.commissions.new();\r\n      }\r\n    }\r\n\r\n    toDto(): any {\r\n      return {\r\n        id: this.id,\r\n        firstName: this.firstName,\r\n        lastName: this.lastName,\r\n        email: this.email,\r\n        phone : this.mobileNumber,\r\n        ennable_appointment_bookig : this.apointmentBooking ? 1 : 0,\r\n        notes : this.notes,\r\n        start_date : this.employmentStartDate,\r\n        end_date : this.employmentEndDate,\r\n        appointment_color: this.apointmentColor,\r\n        dial_code : \"\",\r\n        service_commission : this.commissions.service,\r\n        product_commission : this.commissions.product,\r\n        voucher_sales_commission : this.commissions.voucherSale,\r\n      };\r\n    }\r\n\r\n    updateData(data: any) {\r\n      const {find_user: {\r\n        id,\r\n        name,\r\n        email\r\n      }} = data;\r\n      this.id = id;\r\n      this.firstName = name;\r\n      this.email = email;\r\n    }\r\n\r\n}\r\n\r\nexport class Commission {\r\n  service: number;\r\n  product: number;\r\n  voucherSale: number;\r\n\r\n  constructor() {\r\n    this.new();\r\n    return this;\r\n  }\r\n\r\n  new() {\r\n    this.service = null;\r\n    this.product = null;\r\n    this.voucherSale = null;\r\n  }\r\n}\r\n\r\nexport interface UserDto {\r\n  find_user: {\r\n    id : number;\r\n    firstName : string;\r\n    lastName : string;\r\n    email : string;\r\n    password : string;\r\n    phone : string;\r\n    ennable_appointment_booking : number;\r\n    notes : string;\r\n    start_date : string;\r\n    end_date : string;\r\n    appointment_color : string;\r\n    dial_code : string;\r\n    first_login : number;\r\n    service_commission : number;\r\n    product_commission : number;\r\n    voucher_sales_commission : number;\r\n    sort_order: number;\r\n    level: number;\r\n  };\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UsersComponent } from './users.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: UsersComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <app-page-header [heading]=\\\"'Users'\\\" [icon]=\\\"'fa-users'\\\"></app-page-header>\\r\\n    <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n                <div class=\\\"card mb-3\\\">\\r\\n                    <div class=\\\"card-header\\\">List User <button class=\\\"btn btn-sm btn-success pull-right\\\" type=\\\"button\\\" (click)=\\\"openCreateModal(content)\\\">Thêm mới</button></div>\\r\\n                    <div class=\\\"card-body table-responsive\\\">\\r\\n                        <table class=\\\"table table-hover table-striped\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th>STT</th>\\r\\n                                <th>ID</th>\\r\\n                                <th>User name</th>\\r\\n                                <th>Role</th>\\r\\n                                <th>Status</th>\\r\\n                                <th>Action</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let user of listusers; index as i\\\">\\r\\n                                <td>{{i+1}}</td>\\r\\n                                <td>{{user.id}}</td>\\r\\n                                <td>{{user.name}}</td>\\r\\n                                <td>Admintrolr</td>\\r\\n                                <td>\\r\\n                                  <label class=\\\"switch\\\">\\r\\n                                    <input type=\\\"checkbox\\\" checked=\\\"checked\\\">\\r\\n                                    <span class=\\\"slider round\\\"></span>\\r\\n                                  </label>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                  <button _ngcontent-c31=\\\"\\\" class=\\\"btn btn-sm btn-success\\\" type=\\\"button\\\" (click)=\\\"openUpdateModal(content, user.id)\\\"><i class=\\\"fa fa-pencil-square-o\\\"></i></button>\\r\\n                                  <button _ngcontent-c31=\\\"\\\" class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\"  (click)=\\\"dalete_user(user.id)\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #content let-modal>\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title col-sm-4 offset-sm-4\\\">{{isCreate ? 'Create User' : 'Update user'}}</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"col-sm-4 close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <form #signupForm=ngForm (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        \\r\\n            <ngb-tabset>\\r\\n            <ngb-tab title=\\\"Details\\\">\\r\\n                <ng-template ngbTabContent>\\r\\n                    \\r\\n                        <div class=\\\"col-md-12 form-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-6\\\">\\r\\n                              <div class=\\\"row form-group\\\">\\r\\n                                  <div class=\\\"col-sm-6\\\">\\r\\n                                    <label class=\\\"control-label\\\">FIRST NAME</label>\\r\\n                                    <input [(ngModel)]=\\\"form.firstName\\\" type=\\\"text\\\" class=\\\"form-control input-underline input-lg\\\" name=\\\"first-name\\\" placeholder=\\\"e.g. Jane\\\" required>\\r\\n                                    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.name\\\"> {{ error.name }} </div>\\r\\n                                </div>\\r\\n                \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label class=\\\"control-label\\\">LAST NAME</label>\\r\\n                                    <input [(ngModel)]=\\\"form.lastName\\\" type=\\\"text\\\" name=\\\"last-name\\\" class=\\\"form-control input-underline input-lg\\\" placeholder=\\\"e.g. Doe\\\">\\r\\n                                    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.email\\\"> {{ error.email }} </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        \\r\\n                            <div class=\\\"row form-group\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                <label class=\\\"control-label\\\">MOBILE NUMBER</label>\\r\\n                                <input [(ngModel)]=\\\"form.mobileNumber\\\" type=\\\"number\\\" name=\\\"number\\\" class=\\\"form-control input-underline input-lg\\\" placeholder=\\\"+84 91 234 56 78\\\">\\r\\n                                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.email\\\"> {{ error.email }} </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        \\r\\n                            <div class=\\\"row form-group\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <label class=\\\"control-label\\\">EMAIL</label>\\r\\n                                    <input [(ngModel)]=\\\"form.email\\\" type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control input-underline input-lg\\\" placeholder=\\\"mail@example.com\\\">\\r\\n                                    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.email\\\"> {{ error.email }} </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        \\r\\n                            <div class=\\\"row form-group\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <label class=\\\"control-label\\\">USER PERMISSION</label>\\r\\n                                    <select [(ngModel)]=\\\"form.userPermission\\\" name=\\\"user-permission\\\" class=\\\"form-control\\\">\\r\\n                                        <option selected>No Access</option>\\r\\n                                        <option>Basic</option>\\r\\n                                        <option>Low</option>\\r\\n                                        <option>Medium</option>\\r\\n                                        <option>High</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        \\r\\n                            <div class=\\\"row form-group\\\">\\r\\n                                <div class=\\\"col-sm-12 btn-switch\\\">\\r\\n                                    <label class=\\\"switch\\\">\\r\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"form.apointmentBooking\\\" name=\\\"apointmentBooking\\\">\\r\\n                                        <span class=\\\"slider round\\\"></span>\\r\\n                                    </label>\\r\\n                                    <label class=\\\"control-label\\\">ENABLE APPOINTMENT BOOKINGS</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        \\r\\n                          </div>\\r\\n        \\r\\n                          <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"row form-group\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <label class=\\\"control-label\\\">STAFF TITLE</label>\\r\\n                                    <input [(ngModel)]=\\\"form.staffTitle\\\" type=\\\"text\\\" name=\\\"staff-title\\\" class=\\\"form-control input-underline input-lg\\\"\\r\\n                                        placeholder=\\\"Add staff title (i.e. Hairdresser) viewable in online booking only (optional)\\\">\\r\\n                                    <div class=\\\"alert alert-danger\\\" [hidden]=\\\"!error.email\\\"> {{ error.email }} </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        \\r\\n                            <div class=\\\"row form-group\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <label class=\\\"control-label\\\">NOTES</label>\\r\\n                                    <textarea class=\\\"form-control form-text-area\\\" [(ngModel)]=\\\"form.notes\\\" name=\\\"notes\\\"\\r\\n                                        placeholder=\\\"Add private notes viewable in staff settings only (optional)\\\" rows=\\\"9\\\"></textarea>\\r\\n                                </div>\\r\\n                            </div>\\r\\n        \\r\\n                            <div class=\\\"row form-group\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label class=\\\"control-label\\\">EMPLOYMENT START DATE</label>\\r\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" (click)=\\\"dst.toggle()\\\"\\r\\n                                        name=\\\"start-date\\\" [(ngModel)]=\\\"form.employmentStartDate\\\" ngbDatepicker #dst=\\\"ngbDatepicker\\\">\\r\\n                                    <!-- <div class=\\\"input-group-append\\\">\\r\\n                                        <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"dst.toggle()\\\" type=\\\"button\\\"></button>\\r\\n                                    </div> -->\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label class=\\\"control-label\\\">EMPLOYMENT END DATE</label>\\r\\n                                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" (click)=\\\"de.toggle()\\\"\\r\\n                                        name=\\\"start-date\\\" [(ngModel)]=\\\"form.employmentEndDate\\\" ngbDatepicker #de=\\\"ngbDatepicker\\\">\\r\\n                                    <!-- <div class=\\\"input-group-append\\\">\\r\\n                                        <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"de.toggle()\\\" type=\\\"button\\\"></button>\\r\\n                                    </div> -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n        \\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"form.apointmentBooking\\\">\\r\\n                                <label class=\\\"control-label\\\">APPOINTMENT COLOR</label>\\r\\n                            </div>\\r\\n        \\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n            <ngb-tab>\\r\\n                <ng-template ngbTabTitle>Services</ng-template>\\r\\n                <ng-template ngbTabContent>\\r\\n\\r\\n                    <br>\\r\\n                        <p style=\\\"font-size: 12px; color: rgba(98,98,98,.55);\\\">Assign services this staff member can perform.</p>\\r\\n                        <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\">\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Select All</label>\\r\\n                        </div>\\r\\n                        <hr>\\r\\n                        <div class=\\\"container row\\\">\\r\\n                        <div class=\\\"col-sm-6 custom-control custom-checkbox\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck2\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"customCheck2\\\">Blow Dry</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6 custom-control custom-checkbox\\\">\\r\\n                                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck3\\\">\\r\\n                                <label class=\\\"custom-control-label\\\" for=\\\"customCheck3\\\">Haircut</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                \\r\\n                        \\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n            <ngb-tab title=\\\"Commission\\\">\\r\\n                <ng-template ngbTabContent>\\r\\n                    \\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <form role=\\\"form\\\">\\r\\n                            <br>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                        <label class=\\\"control-label\\\">SERVICE COMMISSION</label>\\r\\n                                        <div class=\\\"form-group input-group\\\">\\r\\n                                            <div class=\\\"input-group-prepend\\\">\\r\\n                                                <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">%</span>\\r\\n                                            </div>\\r\\n                                            <input [(ngModel)]=\\\"form.commissions.service\\\" name=\\\"service\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.0\\\">\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                        <label class=\\\"control-label\\\">PRODUCT COMMISSION</label>\\r\\n                                        <div class=\\\"form-group input-group\\\">\\r\\n                                            <div class=\\\"input-group-prepend\\\">\\r\\n                                                <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">%</span>\\r\\n                                            </div>\\r\\n                                            <input [(ngModel)]=\\\"form.commissions.product\\\" name=\\\"product\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.0\\\">\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-6\\\">\\r\\n                                            <label class=\\\"control-label\\\">VOUCHER SALES COMMISSION</label>\\r\\n                                            <div class=\\\"form-group input-group\\\">\\r\\n                                                <div class=\\\"input-group-prepend\\\">\\r\\n                                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">%</span>\\r\\n                                                </div>\\r\\n                                                <input [(ngModel)]=\\\"form.commissions.voucherSale\\\" name=\\\"voucher\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"0.0\\\">\\r\\n                                            </div>\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            </form>\\r\\n\\r\\n                        </div>\\r\\n                </ng-template>\\r\\n            </ngb-tab>\\r\\n        </ngb-tabset>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-light pull-right\\\" (click)=\\\"modal.dismiss('Cancel click')\\\"> Cancel </button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-dark pull-right\\\" [disabled]=\\\"!signupForm.valid\\\" > Register </button>\\r\\n    </div>\\r\\n</form>\\r\\n<!--       <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close('Save click')\\\">Save</button>\\r\\n      </div> -->\\r\\n    </ng-template>\"","module.exports = \".modal-header .modal-title {\\n  text-align: center; }\\n\\n.modal-header .close {\\n  text-align: right;\\n  margin: -1rem 0rem -1rem auto;\\n  outline: none; }\\n\\n.control-label {\\n  font-size: 13px;\\n  text-transform: uppercase;\\n  font-weight: 700; }\\n\\n.form-text-area {\\n  resize: none; }\\n\\n.btn-switch .control-label {\\n  margin-left: 10px; }\\n\\n.btn-switch {\\n  display: flex;\\n  align-items: center; }\\n\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 60px;\\n  height: 34px; }\\n\\n/* Hide default HTML checkbox */\\n\\n.switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0; }\\n\\n/* The slider */\\n\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  transition: .4s; }\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 26px;\\n  width: 26px;\\n  left: 4px;\\n  bottom: 4px;\\n  background-color: white;\\n  transition: .4s; }\\n\\ninput:checked + .slider {\\n  background-color: #2196F3; }\\n\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3; }\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(26px);\\n  transform: translateX(26px); }\\n\\n/* Rounded sliders */\\n\\n.slider.round {\\n  border-radius: 34px; }\\n\\n.slider.round:before {\\n  border-radius: 50%; }\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid red; }\\n\\n.ng-valid:not(form) {\\n  border-left: 5px solid green; }\\n\\n.form-group {\\n  padding: 8px 0; }\\n\\n.form-group input::-webkit-input-placeholder {\\n    color: #656565 !important; }\\n\\n.form-group input:-moz-placeholder {\\n    /* Firefox 18- */\\n    color: #656565 !important; }\\n\\n.form-group input::-moz-placeholder {\\n    /* Firefox 19+ */\\n    color: #656565 !important; }\\n\\n.form-group input:-ms-input-placeholder {\\n    color: #656565 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3VzZXJzL0M6XFx4YW1wcFxcaHRkb2NzXFxsYXJhdmVsLWFuZ3VsYXItaGFjaGluZXRcXGZyb250ZW5kL3NyY1xcYXBwXFxsYXlvdXRcXHVzZXJzXFx1c2Vycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFrQixFQUNuQjs7QUFFRDtFQUNFLGtCQUFpQjtFQUNqQiw4QkFBNkI7RUFDN0IsY0FBYSxFQUNkOztBQUVEO0VBQ0UsZ0JBQWU7RUFDZiwwQkFBeUI7RUFDekIsaUJBQWdCLEVBQ2pCOztBQUVEO0VBQ0UsYUFBWSxFQUNiOztBQUVEO0VBQ0Usa0JBQWlCLEVBQ2xCOztBQUVEO0VBQ0UsY0FBYTtFQUNiLG9CQUFtQixFQUNwQjs7QUFFRDtFQUNFLG1CQUFrQjtFQUNsQixzQkFBcUI7RUFDckIsWUFBVztFQUNYLGFBQVksRUFDYjs7QUFFRCxnQ0FBZ0M7O0FBQ2hDO0VBQ0UsV0FBVTtFQUNWLFNBQVE7RUFDUixVQUFTLEVBQ1Y7O0FBRUQsZ0JBQWdCOztBQUNoQjtFQUNFLG1CQUFrQjtFQUNsQixnQkFBZTtFQUNmLE9BQU07RUFDTixRQUFPO0VBQ1AsU0FBUTtFQUNSLFVBQVM7RUFDVCx1QkFBc0I7RUFFdEIsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxtQkFBa0I7RUFDbEIsWUFBVztFQUNYLGFBQVk7RUFDWixZQUFXO0VBQ1gsVUFBUztFQUNULFlBQVc7RUFDWCx3QkFBdUI7RUFFdkIsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSwwQkFBeUIsRUFDMUI7O0FBRUQ7RUFDRSw0QkFBMkIsRUFDNUI7O0FBRUQ7RUFDRSxvQ0FBbUM7RUFFbkMsNEJBQTJCLEVBQzVCOztBQUVELHFCQUFxQjs7QUFDckI7RUFDRSxvQkFBbUIsRUFDcEI7O0FBRUQ7RUFDRSxtQkFBa0IsRUFDbkI7O0FBRUQ7RUFDSSwyQkFBeUIsRUFDNUI7O0FBRUQ7RUFDSSw2QkFBMkIsRUFDOUI7O0FBRUQ7RUFDSSxlQUFjLEVBa0JqQjs7QUFuQkQ7SUFHUSwwQkFBeUIsRUFDNUI7O0FBSkw7SUFPUSxpQkFBaUI7SUFDakIsMEJBQXlCLEVBQzVCOztBQVRMO0lBWVEsaUJBQWlCO0lBQ2pCLDBCQUF5QixFQUM1Qjs7QUFkTDtJQWlCUSwwQkFBeUIsRUFDNUIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvdXNlcnMvdXNlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwtaGVhZGVyIC5tb2RhbC10aXRsZSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubW9kYWwtaGVhZGVyIC5jbG9zZSB7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgbWFyZ2luOiAtMXJlbSAwcmVtIC0xcmVtIGF1dG87XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLmNvbnRyb2wtbGFiZWwge1xyXG4gIGZvbnQtc2l6ZTogMTNweDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn1cclxuXHJcbi5mb3JtLXRleHQtYXJlYSB7XHJcbiAgcmVzaXplOiBub25lO1xyXG59XHJcblxyXG4uYnRuLXN3aXRjaCAuY29udHJvbC1sYWJlbCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuXHJcbi5idG4tc3dpdGNoIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5zd2l0Y2gge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgd2lkdGg6IDYwcHg7XHJcbiAgaGVpZ2h0OiAzNHB4O1xyXG59XHJcblxyXG4vKiBIaWRlIGRlZmF1bHQgSFRNTCBjaGVja2JveCAqL1xyXG4uc3dpdGNoIGlucHV0IHtcclxuICBvcGFjaXR5OiAwO1xyXG4gIHdpZHRoOiAwO1xyXG4gIGhlaWdodDogMDtcclxufVxyXG5cclxuLyogVGhlIHNsaWRlciAqL1xyXG4uc2xpZGVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLjRzO1xyXG4gIHRyYW5zaXRpb246IC40cztcclxufVxyXG5cclxuLnNsaWRlcjpiZWZvcmUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGhlaWdodDogMjZweDtcclxuICB3aWR0aDogMjZweDtcclxuICBsZWZ0OiA0cHg7XHJcbiAgYm90dG9tOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7XHJcbiAgdHJhbnNpdGlvbjogLjRzO1xyXG59XHJcblxyXG5pbnB1dDpjaGVja2VkICsgLnNsaWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZGMztcclxufVxyXG5cclxuaW5wdXQ6Zm9jdXMgKyAuc2xpZGVyIHtcclxuICBib3gtc2hhZG93OiAwIDAgMXB4ICMyMTk2RjM7XHJcbn1cclxuXHJcbmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7XHJcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7XHJcbn1cclxuXHJcbi8qIFJvdW5kZWQgc2xpZGVycyAqL1xyXG4uc2xpZGVyLnJvdW5kIHtcclxuICBib3JkZXItcmFkaXVzOiAzNHB4O1xyXG59XHJcblxyXG4uc2xpZGVyLnJvdW5kOmJlZm9yZSB7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcblxyXG4ubmctaW52YWxpZDpub3QoZm9ybSl7XHJcbiAgICBib3JkZXItbGVmdDo1cHggc29saWQgcmVkO1xyXG59XHJcblxyXG4ubmctdmFsaWQ6bm90KGZvcm0pe1xyXG4gICAgYm9yZGVyLWxlZnQ6NXB4IHNvbGlkIGdyZWVuO1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCB7XHJcbiAgICBwYWRkaW5nOiA4cHggMDtcclxuICAgIGlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgICAgICBjb2xvcjogIzY1NjU2NSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIGlucHV0Oi1tb3otcGxhY2Vob2xkZXIge1xyXG4gICAgICAgIC8qIEZpcmVmb3ggMTgtICovXHJcbiAgICAgICAgY29sb3I6ICM2NTY1NjUgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBpbnB1dDo6LW1vei1wbGFjZWhvbGRlciB7XHJcbiAgICAgICAgLyogRmlyZWZveCAxOSsgKi9cclxuICAgICAgICBjb2xvcjogIzY1NjU2NSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxuICAgIGlucHV0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICAgICAgY29sb3I6ICM2NTY1NjUgIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG5cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {NgbModal, NgbModalRef, ModalDismissReasons, NgbModalOptions} from '@ng-bootstrap/ng-bootstrap';\r\nimport { User } from './User'\r\n\r\n@Component({\r\nselector: 'app-users',\r\ntemplateUrl: './users.component.html',\r\nstyleUrls: ['./users.component.scss'],\r\nanimations: [routerTransition()]\r\n})\r\n\r\nexport class UsersComponent implements OnInit {\r\n\r\n  public form = new User();\r\n\r\n  modalOptions: NgbModalOptions;\r\n  public error = [];\r\n\r\n\tcloseResult: string;\r\n  listusers: any;\r\n  isCreate: boolean;\r\n  \r\n\tconstructor(\r\n\tprivate http: HttpClient,\r\n\tprivate modal: NgbModal, \r\n\t) {\r\n\t\tthis.getUser();\r\n\t}\r\n\r\n\tngOnInit() {\r\n    this.modalOptions = {\r\n      backdrop: 'static',\r\n      size: 'lg'\r\n    };\r\n  }\r\n  \r\n  openModal(content: NgbModalRef) {\r\n    this.modal.open(content, this.modalOptions).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  openCreateModal(content: NgbModalRef) {\r\n    this.isCreate = true;\r\n    this.form.new();\r\n    this.openModal(content);\r\n  }\r\n\r\n  openUpdateModal(content: NgbModalRef, userId) {\r\n    this.isCreate = false;\r\n    this.http.post('http://localhost:8000/api/show_user',{id : userId})\r\n    .subscribe((data:any) => {\r\n            this.form.updateData(data);\r\n            this.openModal(content);\r\n        });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\t\r\n\tgetUser() {\r\n\t\t// console.log('Get Products and Update Table');\r\n\t\treturn this.http.get('http://localhost:8000/api/list-user')\r\n\t\t.subscribe((listusers:any) => {\r\n\t\t\tconsole.log(listusers.list_user);\r\n\t\t    this.listusers = listusers.list_user;\r\n\t\t});\r\n\t}\r\n\t\r\n    onSubmit() {\r\n      const dto = this.form.toDto();\r\n      console.table(dto);\r\n      if (this.isCreate) {\r\n        this.Crete_user(dto);\r\n      } else {\r\n        this.update_user(dto);\r\n      }\r\n      this.modal.dismissAll();\r\n      }\r\n\r\n  Crete_user(user) {\r\n    this.http.post('http://localhost:8000/api/create_user',user)\r\n    .subscribe((data:any) => {\r\n            this.getUser();\r\n        });\r\n    }\r\n\r\n  update_user(user) {\r\n    this.http.post('http://localhost:8000/api/update_user',user)\r\n    .subscribe((data:any) => {\r\n            this.getUser();\r\n        });\r\n    }\r\n\r\n\tdalete_user(id) {\r\n\t\t// console.log('Get Products and Update Table');\r\n\t\treturn this.http.post('http://localhost:8000/api/delete_user',{'id':id})\r\n      .subscribe((data:any) => {\r\n              this.getUser();\r\n          });\r\n\t}\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PageHeaderModule } from './../../shared/modules/page-header/page-header.module';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UsersComponent } from './users.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, UsersRoutingModule, PageHeaderModule,FormsModule, NgbModule],\r\n    declarations: [UsersComponent]\r\n})\r\nexport class UsersModule { }\r\n"],"sourceRoot":""}